// <auto-generated />
using System;
using FactoryPlannerApi.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FactoryPlannerApi.Migrations
{
    [DbContext(typeof(FactoryPlannerContext))]
    [Migration("20190304214317_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FactoryPlannerApi.Models.Factory", b =>
                {
                    b.Property<int>("FactoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<bool>("Deleted");

                    b.Property<DateTime>("DeletedTime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("DisplayPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("FactoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<DateTime>("LastUpdated");

                    b.Property<int>("OwnerUserId");

                    b.Property<string>("ServerPath")
                        .IsRequired();

                    b.Property<int>("UpgradeProfileId");

                    b.HasKey("FactoryId");

                    b.HasIndex("OwnerUserId");

                    b.HasIndex("UpgradeProfileId");

                    b.ToTable("Factories");
                });

            modelBuilder.Entity("FactoryPlannerApi.Models.UpgradeProfile", b =>
                {
                    b.Property<int>("UpgradeProfileId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<bool>("Default");

                    b.Property<bool>("Deleted");

                    b.Property<DateTime>("DeletedTime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(512)");

                    b.Property<int?>("FactoryId");

                    b.Property<string>("ProfileName")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 64)))
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ServerPath")
                        .IsRequired();

                    b.HasKey("UpgradeProfileId");

                    b.HasIndex("FactoryId");

                    b.ToTable("UpgradeProfiles");
                });

            modelBuilder.Entity("FactoryPlannerApi.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Created");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("Enabled");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("SessionId")
                        .IsRequired()
                        .HasColumnType("varchar(128)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FactoryPlannerApi.Models.Factory", b =>
                {
                    b.HasOne("FactoryPlannerApi.Models.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerUserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FactoryPlannerApi.Models.UpgradeProfile", "UpgradeProfile")
                        .WithMany()
                        .HasForeignKey("UpgradeProfileId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FactoryPlannerApi.Models.UpgradeProfile", b =>
                {
                    b.HasOne("FactoryPlannerApi.Models.Factory")
                        .WithMany("UpgradeProfiles")
                        .HasForeignKey("FactoryId");
                });
#pragma warning restore 612, 618
        }
    }
}
